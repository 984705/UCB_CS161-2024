#!/bin/sh

in="$(mktemp -u)"
out="$(mktemp -u)"

cleanup () {
    # Remove pipes.
    rm -f "$in" "$out"

    # Kill all shell processes.
    kill 0
}
trap cleanup EXIT
trap exit HUP INT QUIT TERM

# Make named pipes for program communication.
mkfifo "$in"
mkfifo "$out"

i=3
while [ "$i" -gt 0 ]; do
    # Run interact with the program's pipes, terminating it after a timeout.
    timeout 5 ./interact -i "$in" -o "$out" &

    # Spawn program.
    timeout 5 invoke dehexify < "$in" > "$out"

    if [ $? -eq 143 ]; then # Check if exit was killed by timeout (SIGTERM).
        cat <<EOF
Took too long to run! You are probably trying to recv when there is no program
output.
EOF
    else
        echo "Program exited with status $?"
    fi

    # Wait for ./interact to finish. It should terminate now that pipes are
    # closed/EOF is sent, but we spawned it under a timeout earlier anyway.
    wait $!

    i=$(( i - 1 ))
done
